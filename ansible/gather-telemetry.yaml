---

- name: Gather Raspberry Pi telemetry
  hosts: all
  gather_facts: false
  become: false
  vars:
      max_temperature: '60'
      max_days_since_last_reboot: '2'
      max_cpu_utilization: '80'
      max_disk_utilization: '1'

  tasks:

# Temperature
    - name: Get on-board temperature
      shell: vcgencmd measure_temp | grep --only-matching --extended-regexp "[0-9]{2}"
      register: temp

    - name: Determine if the temperature is correct
      ansible.builtin.debug:
        msg: "ERROR: {{inventory_hostname}} exceeded temperature limit {{ temp.stdout_lines[0]}}"
      when: temp.stdout_lines[0] > max_temperature

# Uptime
    - name: Get uptime
      shell: uptime -s | awk '{ print $1 }'
      register: boot_date

    - name: determine if all devices are unmounted
      set_fact:
        elapsed_days: "{{ boot_date.stdout_lines[0] | calculate_elapsed_days }}"

    - name: Determine if we have not rebooted lately
      ansible.builtin.debug:
        msg: "ERROR: {{inventory_hostname}} exceeded max days since last reboot {{ elapsed_days }}"
      when: elapsed_days > max_days_since_last_reboot

# CPU Utilization
    - name: Get cpu average
      shell: uptime | awk '{print $NF}' | cut -d'.' -f1
      register: cpu_avg

    - name: Determine if our cpu average usage is acceptable
      ansible.builtin.debug:
        msg: "ERROR: {{inventory_hostname}} exceeded max cpu utilization {{ cpu_avg.stdout_lines[0]}}"
      when: cpu_avg.stdout_lines[0] > max_cpu_utilization

# Disk Utilization
    - name: Get disk utilization
      shell: df --human-readable --output=pcent . | tail -1 | grep --only-matching --extended-regexp "[0-9]+"
      register: disk_util

    - name: Determine if we exceeded max disk utilization
      ansible.builtin.debug:
        msg: "ERROR: {{inventory_hostname}} exceeded max disk utilization {{ disk_util.stdout_lines[0]}}"
      when: disk_util.stdout_lines[0] > max_disk_utilization

